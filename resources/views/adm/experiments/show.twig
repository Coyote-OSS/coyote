{% extends 'adm.base' %}
{% block title %}Eksperymenty{{ parent() }}{% endblock %}

{% block container %}
  <div class="card card-default">
    <div class="card-header">
      <i class="fa-solid fa-chart-simple"></i>
      Szczegóły eksperymentu
    </div>
    <div class="list-group list-group-flush">
      <div class="list-group-item experiment-title">
        <b>Tytuł:</b>
        <span>{{ experiment.title }}</span>
      </div>
      <div class="list-group-item creation-date">
        <b>Data utworzenia:</b>
        <span>{{ experiment.creationDate }}</span>
      </div>
      <div class="list-group-item user-count">
        <b>Ilość użytkowników:</b>
        <span>{{ experiment.userCount }}</span>
      </div>
    </div>
  </div>

  <div class="card card-default">
    <div class="card-header">
      Przebieg eksperymentu
    </div>
    <div class="card-body">
      <pre><code>{{ experiment.statistics|json_encode|raw }}</code></pre>
    </div>
  </div>

  <div id="survey-form">
    <div class="card card-default">
      <div class="card-header">
        Wszyscy członkowie
      </div>
      <div class="card-body">
        <label for="membersBatch" class="mb-1">
          Użytkownicy zaproszeni do testu:
        </label>
        <textarea class="form-control mb-1" rows="5" v-model="membersBatch"></textarea>
        <small class="text-muted">
          Oddziel ID użytkowników przecinkiem lub spacją.
        </small>
      </div>
    </div>

    <form class="card card-default" action="{{ experimentUpdateMembersUrl }}" method="POST">
      <input type="hidden" name="{{ experimentCsrfField }}" value="{{ experimentCsrfToken }}">
      <div class="card-header">
        Członkowie pojedynczo
      </div>
      <div class="card-body">
        <p>Dodaj ID użytkoników:</p>
        <div v-for="(memberId, key) in memberIds" class="mb-2 me-2 d-inline-block">
          <div class="input-group">
            <input class="form-control" name="members[]" v-bind:value="memberId" style="width:100px;" placeholder="ID użytkownika" readonly/>
            <span class="input-group-text p-0">
              <button class="btn" type="button" style="border:none;" @click.prevent="remove(key)">
                <i class="fa-solid fa-trash"></i>
              </button>
            </span>
          </div>
        </div>
      </div>
      <div class="card-footer d-flex justify-content-end">
        <button class="btn btn-primary">
          <i class="fa-solid fa-check"></i>
          Zapisz
        </button>
      </div>
    </form>
  </div>

  <div class="d-flex justify-content-end mb-4">
    <a class="btn btn-secondary" href="{{ experimentsBackUrl }}">
      <i class="fa-solid fa-arrow-left"></i>
      Powrót
    </a>
  </div>

  <script
      src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.14/vue.min.js"
      integrity="sha512-XdUZ5nrNkVySQBnnM5vzDqHai823Spoq1W3pJoQwomQja+o4Nw0Ew1ppxo5bhF2vMug6sfibhKWcNJsG8Vj9tg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"></script>
  <script>var experimentMembers = {{ experiment.members|json_encode|raw }};</script>
  <script>
    function batchToEntries(batch) {
      return batch.split(/[ ,]/).map(s => s.trim());
    }

    function entriesToBatch(memberIds) {
      return memberIds.join(',');
    }

    new Vue({
      name: 'Survey members',
      el: '#survey-form',
      delimiters: ['${', '}'],
      data: {
        memberIds: experimentMembers,
        membersBatch: experimentMembers.join(','),
      },
      watch: {
        membersBatch() {
          this.memberIds.length = 0;
          this.memberIds.push(...batchToEntries(this.membersBatch));
        },
      },
      methods: {
        addRow() {
          this.rows.unshift({word: "", replacement: ""});
        },
        remove(index) {
          this.memberIds.splice(index, 1);
          this.membersBatch = entriesToBatch(this.memberIds);
        },
      },
    });
  </script>
{% endblock %}
